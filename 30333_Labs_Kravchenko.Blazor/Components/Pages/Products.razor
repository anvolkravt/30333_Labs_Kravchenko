@page "/products"
@rendermode InteractiveServer
@using _30333_Labs_Kravchenko.Blazor.Services
@using _30333_Labs_Kravchenko.Domain.Entities
@using _30333_Labs_Kravchenko.Blazor.Components.Layout.ProductComponents

<h3>Препараты</h3>

@if (Service.Products == null || !Service.Products.Any())
{
    <p>Нет данных для отображения</p>
}
else
{
    <CascadingValue Value="Service">
        <ProductList MedicationSelected="ShowDetails" />
        <Pager />
        <MedicationDetails Medication="SelectedMedication" />
    </CascadingValue>
}

@code {
    [Inject]
    public IProductService<Medication> Service { get; set; }

    public Medication SelectedMedication { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Service.GetProducts();
    }

    private async Task ShowDetails(Medication medication)
    {
        SelectedMedication = medication;
        StateHasChanged();
    }
}